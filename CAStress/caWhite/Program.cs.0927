using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;
using TestStack.White;
using TestStack.White.Factory;
using TestStack.White.UIItems.Finders;
using TestStack.White.InputDevices;
using TestStack.White.UIItems;
using TestStack.White.UIItems.MenuItems;
using TestStack.White.UIItems.TreeItems;
using TestStack.White.UIItems.WindowItems;
using TestStack.White.UIItems.ListBoxItems;
using TestStack.White.UIItems.TableItems;
using TestStack.White.UIItems.WindowStripControls;
using System.Threading;
using System.Windows.Automation;
using System.Text.RegularExpressions;
using NUnit.Framework;
using System.IO;
using TestStack.White.UIItems.Scrolling;
using System.Windows;

namespace caWhite
{
    class Program
    {
        // source exe file path. here it is calculator exe path
        private const string ExeSourceFile = @"C:\Windows\system32\calc.exe";
        //Global Variable to for Application launch
        private static Application _application;
        //Global variable to get the Main window of calculator from application.
        private static Window _mainWindow;

        //CA
        private const string CAExeFile = @"C:\Program Files (x86)\Spacelabs\ICS\Clinical Access\ClinicalHistoryXP.exe";
        private static Application _CAApp;
        private static TestStack.White.UIItems.WindowItems.Window _CAMainWindow;
        static void Main(string[] args)
        {
            var psi = new ProcessStartInfo(CAExeFile);
            _CAApp = Application.AttachOrLaunch(psi);
            _CAMainWindow = _CAApp.GetWindow(SearchCriteria.ByText("CLINICAL ACCESS"), InitializeOption.NoCache);

            Window _PatientSelectDialogWindow = _CAMainWindow.ModalWindow("Patient Select Dialog");
            _PatientSelectDialogWindow.Close();

            var PatientsSelectButton = _CAMainWindow.Get(SearchCriteria.ByAutomationId("btnSelectPatient"));
            PatientsSelectButton.Click();

            _PatientSelectDialogWindow = _CAMainWindow.ModalWindow("Patient Select Dialog");
            var PatientsTab = _PatientSelectDialogWindow.Get(SearchCriteria.ByText("Patients"));
            PatientsTab.Click();

            var comboBox = _PatientSelectDialogWindow.Get<ComboBox>(SearchCriteria.ByAutomationId("cmbFacility"));
            comboBox.Select("Facility1");

            var DataGridView_Table = _PatientSelectDialogWindow.Get<Table>(SearchCriteria.ByAutomationId("dgvUnits"));
            DataGridView_Table.Rows[0].Select(); //"Intense Care"
            try
            {
                DataGridView_Table.Rows[0].Click();
            }
            catch (Exception e)
            {
                Console.WriteLine("test case BedsideData exception" + e.Message.ToString());
            }
            
            _PatientSelectDialogWindow.WaitWhileBusy();

            var PatientsDatagrid2 = _PatientSelectDialogWindow.Get<Table>(SearchCriteria.ByAutomationId("dgvPatients"));
            TableRow testRow = null;
            foreach (TableRow row in PatientsDatagrid2.Rows)
            {
                if ((string)row.Cells[0].Value == "RW164")  //"XTQ15(2360)") //"CP116")
                {
                    testRow = row;
                    break;
                }
            }

            //after click the row, the "Patient Select Dialog" disappear and may generate exception
            try
            {
                testRow.Click();
            }
            catch (Exception e)
            {
                Console.WriteLine("test case BedsideData exception" + e.Message.ToString());
            }

            //click Waveforms
            var WaveformsView = _CAMainWindow.Get(SearchCriteria.ByAutomationId("btnArrhythmiaReview"));
            WaveformsView.Click();

            _CAMainWindow.Get(SearchCriteria.ByAutomationId("btnAnalyze")).Click();
            Window SelectTimeWindow = _CAMainWindow.ModalWindow("Select Time");
            var DurationCombobox = SelectTimeWindow.Get<ComboBox>(SearchCriteria.ByAutomationId("CboDuration"));
            DurationCombobox.Click();
            DurationCombobox.Select("Previous 12 Hours");
            SelectTimeWindow.Get(SearchCriteria.ByAutomationId("BtnOk")).Click();

            //wait until finishing analysis
            Thread.Sleep(10000);
            _CAMainWindow.Get(SearchCriteria.ByAutomationId("btnHistograms")).Click();
            _CAMainWindow.Get(SearchCriteria.ByAutomationId("btnPrint")).Click();
            Thread.Sleep(5000);

            bool found = false;
            string[] files = Directory.GetFiles(@"C:\SLReports");
            foreach (string file in files)
            {
                if (file.Contains("HISTOGRAM"))
                {
                    // File name like "PRIORITYEVENTREPORT~FOR_10815_SD~~2016-09-26_10-16-08~1.pdf"
                    int pos = file.IndexOf("~~");
                    string subStr = file.Substring(pos + 2, 19);
                    string[] strArr = subStr.Split(new char[] { '-', '_' });
                    DateTime printTime = new DateTime(Convert.ToInt32(strArr[0]), Convert.ToInt32(strArr[1]), Convert.ToInt32(strArr[2]),
                        Convert.ToInt32(strArr[3]), Convert.ToInt32(strArr[4]), Convert.ToInt32(strArr[5]));
                    DateTime NowTime = DateTime.Now;
                    int SecDiff = (int)(NowTime - printTime).TotalSeconds;
                    //if find the recent file assumed from this test case
                    if (SecDiff < 10)
                    {
                        found = true;
                        File.Delete(file);
                    }
                }
            }
            Assert.IsTrue(found == true);

            // Assert.IsTrue(found == true);

            _CAApp.Close();
            _CAApp.Dispose();
        }


        public static void runCalculate()
        {
            try
            {

                //strat process for the above exe file location
                var psi = new ProcessStartInfo(ExeSourceFile);
                // launch the process through white application
                _application = TestStack.White.Application.AttachOrLaunch(psi);
                //Get the window of calculator from white application 
                _mainWindow = _application.GetWindow(SearchCriteria.ByText("Calculator"), InitializeOption.NoCache);
                //Convert the open calculator into Date calculator using key board Hot Key(Ctrl+E)
                DateDifferenceCalculation();
                //Return back to Basic using Key Board Hot Key
                ReturnToBasicCalculatorUsingHotKey();
                //Return back to Basic using Menu Option
                ReturnToBasicCalculatorUsingMenu();
                //Open Help option in Calculator
                OpenHelpOptionInCalculator();
                //Perform Addition of few numbers
                PerformSummationOnCalculator();
                //Dispose the main window
                _mainWindow.Dispose();
                //Dispose the application
                _application.Dispose();
            }
            catch (Exception)
            {

                throw;
            }
        }

        private static void PerformSummationOnCalculator()
        {
            //Button with Numerical value 1
            TestStack.White.UIItems.Button btn1 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("1"));
            //Button with Numerical value 2
            TestStack.White.UIItems.Button btn2 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("2"));
            //Button with Numerical value 3
            TestStack.White.UIItems.Button btn3 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("3"));
            //Button with Numerical value 4
            TestStack.White.UIItems.Button btn4 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("4"));
            //Button with Numerical value 5
            TestStack.White.UIItems.Button btn5 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("5"));
            //Button with Numerical value 6
            TestStack.White.UIItems.Button btn6 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("6"));
            //Button with Numerical value 7
            TestStack.White.UIItems.Button btn7 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("7"));
            //Button with Numerical value 8
            TestStack.White.UIItems.Button btn8 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("8"));
            //Button with Numerical value 9
            TestStack.White.UIItems.Button btn9 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("9"));
            //Button with Numerical value 0
            TestStack.White.UIItems.Button btn0 = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("0"));
            //Button with text as +(for sum)
            TestStack.White.UIItems.Button btnSum = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("Add"));
            //Read button to get the result
            TestStack.White.UIItems.Button btnResult = _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByText("Equals"));
            //add two numbers 1234 and 5678 and get the result.
            //Type First Numbers 1234
            btn1.Click();
            btn2.Click();
            btn3.Click();
            btn4.Click();
            //Press Add button
            btnSum.Click();
            //Type 2nd number 
            btn5.Click();
            btn6.Click();
            btn7.Click();
            btn8.Click();
            //Get the result
            btnResult.Click();
            //read the result
            TestStack.White.UIItems.Label resultLable = _mainWindow.Get<TestStack.White.UIItems.Label>(SearchCriteria.ByAutomationId("150"));
            string result = resultLable.Text;
            if (result == "6912")
            {
                Console.WriteLine("Addition of numbers is correct.the result is {0}", result);
            }
            //  Assert.AreEqual("6912", resultLable, "Sorry Summation is wrong!!");
        }
        /// <summary>
        /// Open help File from calculator menu
        /// </summary>
        private static void OpenHelpOptionInCalculator()
        {
            //Click on Help at Menu item
            var help = _mainWindow.Get<TestStack.White.UIItems.MenuItems.Menu>(SearchCriteria.ByText("Help"));
            help.Click();
            //Click on View Help guide to open new window from menu bar
            var viewHelp = _mainWindow.Get<TestStack.White.UIItems.MenuItems.Menu>(SearchCriteria.ByText("View Help"));
            viewHelp.Click();
        }
        /// <summary>
        /// Operate the Calculator in to basic mode through Menu option
        /// </summary>
        private static void ReturnToBasicCalculatorUsingMenu()
        {
            var menuView = _mainWindow.Get<TestStack.White.UIItems.MenuItems.Menu>(SearchCriteria.ByText("View"));
            menuView.Click();
            //select Basic
            var menuViewBasic = _mainWindow.Get<TestStack.White.UIItems.MenuItems.Menu>(SearchCriteria.ByText("Basic"));
            menuViewBasic.Click();

        }
        /// <summary>
        /// Change the calculator mode in basic using Key Board Hot Key
        /// </summary>
        private static void ReturnToBasicCalculatorUsingHotKey()
        {

            Keyboard.Instance.HoldKey(TestStack.White.WindowsAPI.KeyboardInput.SpecialKeys.CONTROL);
            Keyboard.Instance.PressSpecialKey(TestStack.White.WindowsAPI.KeyboardInput.SpecialKeys.F4);
            Keyboard.Instance.LeaveKey(TestStack.White.WindowsAPI.KeyboardInput.SpecialKeys.CONTROL);
        }
        /// <summary>
        /// Find difference between dates through calculator
        /// </summary>
        private static void DateDifferenceCalculation()
        {
            Keyboard.Instance.HoldKey(TestStack.White.WindowsAPI.KeyboardInput.SpecialKeys.CONTROL);
            Keyboard.Instance.Enter("E");
            Keyboard.Instance.LeaveKey(TestStack.White.WindowsAPI.KeyboardInput.SpecialKeys.CONTROL);
            //On Date window find the difference between dates.
            //Set value into combobox
            var comboBox = _mainWindow.Get<TestStack.White.UIItems.ListBoxItems.ComboBox>(SearchCriteria.ByAutomationId("4003"));
            comboBox.Select("Calculate the difference between two dates");
            //Click on Calculate button
            TestStack.White.UIItems.Button caclButton =
                _mainWindow.Get<TestStack.White.UIItems.Button>(SearchCriteria.ByAutomationId("4009"));
            caclButton.Click();
        }
    }
}
